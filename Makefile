#############################################################################
# Makefile for building: gameproj
# Generated by qmake (2.01a) (Qt 4.6.2) on: Sun Apr 22 22:14:13 2012
# Project:  gameproj.pro
# Template: app
# Command: /usr/bin/qmake -unix -o Makefile gameproj.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I. -I.
LINK          = g++
LFLAGS        = -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = bullet.cpp \
		devildog.cpp \
		gameBoard.cpp \
		gameWindow.cpp \
		gun.cpp \
		heart.cpp \
		lmg.cpp \
		main.cpp \
		pistol.cpp \
		player.cpp \
		shotgun.cpp \
		sniper.cpp \
		spitter.cpp \
		spittershot.cpp \
		weapon.cpp \
		zombie.cpp moc_gameBoard.cpp \
		moc_gameWindow.cpp
OBJECTS       = bullet.o \
		devildog.o \
		gameBoard.o \
		gameWindow.o \
		gun.o \
		heart.o \
		lmg.o \
		main.o \
		pistol.o \
		player.o \
		shotgun.o \
		sniper.o \
		spitter.o \
		spittershot.o \
		weapon.o \
		zombie.o \
		moc_gameBoard.o \
		moc_gameWindow.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		gameproj.pro
QMAKE_TARGET  = gameproj
DESTDIR       = 
TARGET        = gameproj

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: gameproj.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -unix -o Makefile gameproj.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/libQtGui.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -unix -o Makefile gameproj.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/gameproj1.0.0 || $(MKDIR) .tmp/gameproj1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/gameproj1.0.0/ && $(COPY_FILE) --parents bullet.h devildog.h gameBoard.h gameWindow.h gun.h heart.h lmg.h pistol.h player.h shotgun.h sniper.h spitter.h spittershot.h weapon.h zombie.h .tmp/gameproj1.0.0/ && $(COPY_FILE) --parents bullet.cpp devildog.cpp gameBoard.cpp gameWindow.cpp gun.cpp heart.cpp lmg.cpp main.cpp pistol.cpp player.cpp shotgun.cpp sniper.cpp spitter.cpp spittershot.cpp weapon.cpp zombie.cpp .tmp/gameproj1.0.0/ && (cd `dirname .tmp/gameproj1.0.0` && $(TAR) gameproj1.0.0.tar gameproj1.0.0 && $(COMPRESS) gameproj1.0.0.tar) && $(MOVE) `dirname .tmp/gameproj1.0.0`/gameproj1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/gameproj1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_gameBoard.cpp moc_gameWindow.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_gameBoard.cpp moc_gameWindow.cpp
moc_gameBoard.cpp: weapon.h \
		gun.h \
		bullet.h \
		player.h \
		lmg.h \
		pistol.h \
		sniper.h \
		shotgun.h \
		zombie.h \
		gameWindow.h \
		spittershot.h \
		spitter.h \
		devildog.h \
		heart.h \
		gameBoard.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) gameBoard.h -o moc_gameBoard.cpp

moc_gameWindow.cpp: player.h \
		weapon.h \
		gun.h \
		bullet.h \
		lmg.h \
		pistol.h \
		sniper.h \
		shotgun.h \
		gameWindow.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) gameWindow.h -o moc_gameWindow.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

bullet.o: bullet.cpp bullet.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o bullet.o bullet.cpp

devildog.o: devildog.cpp devildog.h \
		zombie.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o devildog.o devildog.cpp

gameBoard.o: gameBoard.cpp gameBoard.h \
		weapon.h \
		gun.h \
		bullet.h \
		player.h \
		lmg.h \
		pistol.h \
		sniper.h \
		shotgun.h \
		zombie.h \
		gameWindow.h \
		spittershot.h \
		spitter.h \
		devildog.h \
		heart.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o gameBoard.o gameBoard.cpp

gameWindow.o: gameWindow.cpp gameWindow.h \
		player.h \
		weapon.h \
		gun.h \
		bullet.h \
		lmg.h \
		pistol.h \
		sniper.h \
		shotgun.h \
		gameBoard.h \
		zombie.h \
		spittershot.h \
		spitter.h \
		devildog.h \
		heart.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o gameWindow.o gameWindow.cpp

gun.o: gun.cpp gun.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o gun.o gun.cpp

heart.o: heart.cpp heart.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o heart.o heart.cpp

lmg.o: lmg.cpp lmg.h \
		gun.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o lmg.o lmg.cpp

main.o: main.cpp gameWindow.h \
		player.h \
		weapon.h \
		gun.h \
		bullet.h \
		lmg.h \
		pistol.h \
		sniper.h \
		shotgun.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

pistol.o: pistol.cpp pistol.h \
		gun.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o pistol.o pistol.cpp

player.o: player.cpp player.h \
		weapon.h \
		gun.h \
		bullet.h \
		lmg.h \
		pistol.h \
		sniper.h \
		shotgun.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o player.o player.cpp

shotgun.o: shotgun.cpp shotgun.h \
		gun.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o shotgun.o shotgun.cpp

sniper.o: sniper.cpp sniper.h \
		gun.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o sniper.o sniper.cpp

spitter.o: spitter.cpp spitter.h \
		zombie.h \
		spittershot.h \
		bullet.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o spitter.o spitter.cpp

spittershot.o: spittershot.cpp spittershot.h \
		bullet.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o spittershot.o spittershot.cpp

weapon.o: weapon.cpp weapon.h \
		gun.h \
		bullet.h \
		player.h \
		lmg.h \
		pistol.h \
		sniper.h \
		shotgun.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o weapon.o weapon.cpp

zombie.o: zombie.cpp zombie.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o zombie.o zombie.cpp

moc_gameBoard.o: moc_gameBoard.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_gameBoard.o moc_gameBoard.cpp

moc_gameWindow.o: moc_gameWindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_gameWindow.o moc_gameWindow.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

